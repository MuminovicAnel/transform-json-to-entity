import { Node } from "./Node";
import { Accessor, IFieldNode, ClassNode, IRelation } from "..";
export declare class FieldNode extends Node implements IFieldNode {
    private _accessors;
    private _typeName;
    private _args;
    private _isArray;
    private _isJson;
    private _isNullable;
    private _defaultValue?;
    private _primary;
    private _relation;
    private _classNode;
    private _staticRelation;
    readonly Accessors: Accessor[];
    readonly TypeName: string;
    readonly Args: string;
    readonly DefaultValue: any;
    readonly IsArray: boolean;
    readonly IsJson: boolean;
    readonly IsNullable: boolean;
    readonly Primary: boolean;
    readonly Relation: FieldNode;
    readonly ClassNode: ClassNode;
    readonly StaticRelation: IRelation;
    static parseObjects(objs: ArrayLike<IFieldNode>, classNode: ClassNode): FieldNode[];
    ToObject(): IFieldNode;
    ParseObject(obj: IFieldNode): this;
    SetClassNode(classNode: ClassNode): this;
    SetStaticRelation(classNodeName: string, fieldNodeName: string): this;
    SetRelation(fieldNode: FieldNode): this;
    SetPrimary(isPrimary: boolean): this;
    SetType(type: string | Function): this;
    AddArgs(Args: string): this;
    SetIsArray(isArray: boolean): this;
    SetIsJson(isJson: boolean): void;
    SetIsNullable(isNullable: boolean): this;
    SetDefaultValue(defaultValue: any): this;
    AddAccessor(...accessors: Accessor[]): this;
    RemoveAccessor(accessor: string): this;
}
